package cz.hlubyluk.euler.problems;

/**
 * Highly divisible triangular number
 * Problem 12
 * <p>
 * The sequence of triangle numbers is generated by adding the natural numbers.
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 * <p>
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * <p>
 * Let us list the factors of the first seven triangle numbers:
 * <p>
 * 1: 1<br>
 * 3: 1, 3<br>
 * 6: 1, 2, 3, 6<br>
 * 10: 1, 2, 5, 10<br>
 * 15: 1, 3, 5, 15<br>
 * 21: 1, 3, 7, 21<br>
 * 28: 1, 2, 4, 7, 14, 28<br>
 * <p>
 * We can see that 28 is the first triangle number to have over five divisors.
 * <p>
 * What is the value of the first triangle number to have over five hundred divisors?
 * <p>
 * Created by HlubyLuk on 10.08.16.
 */
public class Problem12 extends Problem {
    @Override
    public Number solve() {
        long triangleNumber = 0;
        int i, countOfDividers = 0;

        for (i = 1; countOfDividers <= 500; i++) {
            triangleNumber = triangleNumber(i);

            countOfDividers = countOfDividers(triangleNumber);
        }

        String format = String.format(
                "i -> %d, triangleNumber -> %d, countOfDividers -> %d",
                i,
                triangleNumber,
                countOfDividers
        );

        return triangleNumber;
    }
}
