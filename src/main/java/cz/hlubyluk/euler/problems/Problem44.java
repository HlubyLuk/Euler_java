package cz.hlubyluk.euler.problems;

/**
 * Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers
 * are:
 *
 * <p>1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
 *
 * <p>It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is
 * not pentagonal.
 *
 * <p>Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are
 * pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
 *
 * @author HlubyLuk
 */
public final class Problem44 extends Problem {

    /**
     * https://en.wikipedia.org/wiki/Pentagonal_number
     *
     * @param y number to check.
     * @return {@link Boolean#TRUE} is pentagonal number, otherwise {@link Boolean#FALSE}.
     */
    private boolean isPentagonal(long y) {
        long a = 24 * y + 1;
        double b = Math.sqrt(a);
        return b * b == a && b % 6 == 5;
    }

    private long pentagonal(int x) {
        return x * (3 * x - 1) / 2;
    }

    @Override
    public Number solve() {
        long tmp = -1;
        for (int i = 1; ; i += 1) {
            boolean stop = false;
            long pK = this.pentagonal(i);
            for (int j = i; j > 0; j -= 1) {
                long pJ = this.pentagonal(j);
                long diff = pK - pJ;
                long add = pK + pJ;
                if (this.isPentagonal(diff) && this.isPentagonal(add)) {
                    tmp = pK - pJ;
                    stop = true;
                }
            }
            if (stop) {
                break;
            }
        }
        return tmp;
    }
}
