package cz.hlubyluk.euler.problems;

/**
 * Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
 *
 * <p>Triangle Tn=n(n+1)/2 1, 3, 6, 10, 15, ...
 *
 * <p>Pentagonal Pn=n(3n−1)/2 1, 5, 12, 22, 35, ...
 *
 * <p>Hexagonal Hn=n(2n−1) 1, 6, 15, 28, 45, ...
 *
 * <p>It can be verified that T285 = P165 = H143 = 40755.
 *
 * <p>Find the next triangle number that is also pentagonal and hexagonal.
 *
 * <p>
 *
 * @author HlubyLuk
 */
public class Problem45 extends Problem {

    private boolean isHexagonal(long y) {
        double x = (1 + Math.sqrt(1 + 8 * y)) / 4;
        return x - (int) x == 0;
    }

    /**
     * https://en.wikipedia.org/wiki/Pentagonal_number
     *
     * @param y number to check.
     * @return {@link Boolean#TRUE} is pentagonal number, otherwise {@link Boolean#FALSE}.
     */
    private boolean isPentagonal(long y) {
        long a = 24 * y + 1;
        double b = Math.sqrt(a);
        return b * b == a && b % 6 == 5;
    }

    @Override
    public Number solve() {
        long i = 286;
        while (true) {
            long triangle = this.triangleNumber(i);
            if (this.isPentagonal(triangle) && this.isHexagonal(triangle)) {
                break;
            }
            i += 1;
        }
        return this.triangleNumber(i);
    }

    long triangleNumber(long number) {
        return number * (number + 1) / 2;
    }
}
