package cz.hlubyluk.euler.problems;

import java.util.TreeSet;

/**
 * Distinct powers Problem 29
 *
 * <p>Consider all integer combinations of a^b for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:
 *
 * <p>2^2= 4, 2^3= 8, 2^4= 16, 2^5= 32 3^2= 9, 3^3= 27, 3^4= 81, 3^5= 243 4^2=16, 4^3= 64, 4^4=256,
 * 4^5=1024 5^2=25, 5^3=125, 5^4=625, 5^5=3125
 *
 * <p>If they are then placed in numerical order, with any repeats removed, we get the following
 * sequence of 15 distinct terms:
 *
 * <p>4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
 *
 * <p>How many distinct terms are in the sequence generated by a^b for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
 *
 * <p>Created by HlubyLuk on 18.09.16.
 */
public class Problem29 extends Problem {
    private static final int START = 2;
    private static final int STOP = 100;
    //    private static final int STOP = 5;

    @Override
    public Number solve() {
        TreeSet<Double> tmp = new TreeSet<>();

        for (int a = START; a <= STOP; a++) {
            for (int b = START; b <= STOP; b++) {
                tmp.add(Math.pow(a, b));
            }
        }

        return tmp.size();
    }
}
